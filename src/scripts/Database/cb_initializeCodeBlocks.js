const create_CodeBlock = require('./cb_create_CodeBlock')

// blockLanguage, blockTitle, dayNumber, correctBlock, timidBlock, delusionalBlock, correctCode


const initializeCodeBlocks = () => {
	create_CodeBlock('JavaScript', 'Declaring Variables', 0, 'const a = 1\nconst b = \'string\'\nconst c = a + b', 'const _ = 1\nconst b = _string_\n_____ c = a _ b', 'var a = 1\nconst b = string\nconst c = a & b', 'const a = 1Æconst b = \'string\'Æconst c = a + b')
	create_CodeBlock('JavaScript', 'Declaring Variables', 0, 'let myVariable = \'\'\nmyVariable = \'Not blank\'\nmyVariable = 100', 'let __________ = \'\'\nmyVariable _ \'Not blank\'\nmy___iable = 100', 'vars myVariable = \'\'\nmyVariable != \'Not blank\'\nmyVar = 100', 'let myVariable = \'\'ÆmyVariable = \'Not blank\'ÆmyVariable = 100')
	create_CodeBlock('JavaScript', 'Declaring Arrays', 0, 'let myArray = []\nmyArray.push(a)\nmyArray.push(c)\nconsole.log(myArray)', '___ myArray = []\nmyArray.____(a)\n_______.push(c)\n_______.log(myArray)', 'let myArray = {}\nmyArray.push[a]\nconst myArray.push(c)\nconsole.frog(myArray)', 'let myArray = []ÆmyArray.push(a)ÆmyArray.push(c)Æconsole.log(myArray)')
	create_CodeBlock('JavaScript', 'Declaring Functions', 0, 'function myFunction (arg1, arg2) {\n var str = arg1\n var newStr = arg1 + arg2\n return newStr\n}', '________ myFunction (arg1, arg2) {\n ___ str _ arg1\n var newStr = ____ + arg2\n return ___Str\n}', 'function myFunction (arg1 arg2) {\n var str = arrg1\n newStr = arg1 += arg2\n reurn newStr\n}', 'function myFunction (arg1, arg2) {Æ var str = arg1Æ var newStr = arg1 + arg2Æ return newStrÆ}')
	create_CodeBlock('HTML', 'HTML Page Strucure', 0, '<html>\n <head>\n\n </head>\n <body>\n\n </body>\n</html>', '<html>\n <____>\n\n </____>\n <body>\n\n </body>\n</____>', '<http>\n <shed>\n\n </hear>\n <bawdy>\n\n </shoddy>\n</hello>', '<html>Æ <head>ÆÆ </head>Æ <body>ÆÆ </body>Æ</html>')
	create_CodeBlock('CSS', 'CSS Button Styling', 0, 'button {\n background-color: black;\n color: #FFF;\n}', 'button {\n background-_____: black;\n color: ____;\n}', 'button {\n body-bgcolor: #67hrs;\n color: #67hrs;\n}', 'button {Æ background-color: black;Æ color: #FFF;Æ}')
	create_CodeBlock('JavaScript', 'Arrow Functions', 1, 'const myFunction = () => {\n const str1 = \'some text\'\n console.log\nstr1.length)\n}', 'const myFunction = __ __ {\n _____ str1 = \'some text\'\n console.___\nstr1.length)\n}', 'var myFunction = (is perfect) = {\n str1 = some text\n console.slog\nstr1.lenth)\n}', 'const myFunction = () => {Æ const str1 = \'some text\'Æ console.log(str1.length)Æ}')
	create_CodeBlock('Command Line', 'Command Line Alias', 1, 'alias gpom="git push origin master"', 'alias gpom="git push ______ master"', 'alies gpom="git push origin faster"', 'alias gpom="git push origin master"')
	create_CodeBlock('Command Line', 'Command Line Function', 1, 'copyFiles() {\n  cp -r ~/workspace/ ~/workspace/backup\n}', 'copyFiles__ {\n  cp __ ~/workspace/ ~/workspace/backup\n}', 'copyFlies() {\n  copy -r ~/workspace/ /workspace/backup\n}', 'copyFiles() {Æ    cp -r ~/workspace/ ~/workspace/backupÆ}')
	create_CodeBlock('Command Line', 'Command Line', 1, 'mkdir NewDirectory', 'mk___ NewDirectory', 'makedir NewDirectory', 'mkdir NewDirectory')
	create_CodeBlock('Command Line', 'Node Package Manager', 1, 'npm init\nnpm install --save-dev browserify', '___ init\nnpm install --save-___ browserify', 'npm start\nnpm install --crave-dev browserify', 'npm initÆnpm install --save-dev browserify')
	create_CodeBlock('Command Line', 'Initialize New GitHub Repo', 2, 'git init\ngit add .\ngit commit -m "message"\ngit remote add origin https://github.com/userName/repo\ngit push -u origin master', '___ init\ngit add _\ngit commit __ "message"\ngit ______ add origin https://github.com/userName/repo\ngit push -u origin ______', 'sith init\nsith add .\nsith commit -m "message"\nsith remote add origin https://sithumb.com/userName/repo\nsith push -u seed matrix', 'git initÆgit add .Ægit commit -m "message"Ægit remote add origin https://github.com/userName/repoÆgit push -u origin master')
	create_CodeBlock('JavaScript', 'Printing to the DOM', 2, 'const titleText = \'Welcome to My Page\'\nconst parent = document.getElementById(\'titleSpot\')\nconst title = document.createElement(\'h1\')\ntitle.textContent = titleText\nparent.appendChild(title)', '_____ titleText = \'Welcome to My Page\'\nconst parent = document.get_______ById(\'titleSpot\')\nconst title = document.______Element(\'h1\')\ntitle.text_______ = titleText\nparent.append_____(title)', 'var titleText = \'Welcome to My Page\'\nlet parent = document.getElement(\'titleSpot\')\nconstant title = window.createElement(\'h1\')\ntitle.innerHTML = titleText\nparent.addChild(title)', 'const titleText = \'Welcome to My Page\'Æconst parent = document.getElementById(\'titleSpot\')Æconst title = document.createElement(\'h1\')Ætitle.textContent = titleTextÆparent.appendChild(title)')
	create_CodeBlock('JavaScript', 'Factory Functions', 2, 'const componentFactory = (type, contents) => {\n const component = document.createElement(type)\n component.textContent = contents\n return component\n}', 'const componentFactory _ (type, contents) __ {\n const component = ________.createElement(type)\n _________.textContent = contents\n return _________\n}', 'function componentFactory = (type, contents) => {\n element component = document.procreateElement(type)\n opponent.textContent = contents\n provide component\n)', 'const componentFactory = (type, contents) => {Æ const component = document.createElement(type)Æ component.textContent = contentsÆ return componentÆ}')
	create_CodeBlock('Command Line', 'Git Command Line Interface', 2, 'git fetch --all\ngit pull origin master', 'git _____ --all\ngit pull ______ master', 'git fetchIt\ngit grab master', 'git fetch --allÆgit pull origin master')
	create_CodeBlock('Command Line', 'Git Command Line Interface', 2, 'git checkout -b branchName', 'git checkout __ branchName', 'git create branch branchName', 'git checkout -b branchName')
	create_CodeBlock('JavaScript', 'If Condition', 3, 'if (i % 5 === 0 && i % 7 === 0) {\n console.log(\'ChickenMonkey\')\n}', 'if (i % 5 ___ 0 && i _ 7 === 0) {\n console.log(\'ChickenMonkey\')\n}', 'if (i # 5 = 0 && i # 7 = 0) (\n console.blog(\'ChickenMonkey\')\n)', 'if (i % 5 === 0 && i % 7 === 0) {Æ console.log(\'ChickenMonkey\')Æ}')
	create_CodeBlock('JavaScript', 'For Loop', 3, 'for (let i = 0; i <= 100; i++) {\n string += a\n}', 'for (___ i = 0; i <= 100; i__) {\n string += a\n}', 'while (vet i = 0; i = 100; i--) {\n string += a\n}', 'for (let i = 0; i <= 100; i++) {Æ string += aÆ}')
	create_CodeBlock('JavaScript', 'ForEach Loop', 3, 'const cookies = [\'chocolate chip\', \'peanut butter\']\ncookies.forEach(cookie => {\n console.log(`That\'s a tasty ${cookie} cookie!`)\n})', 'const cookies = _\'chocolate chip\'_ \'peanut butter\'_\ncookies.forEach(cookie __ {\n _______.log(_That\'s a tasty ${cookie} cookie!_)\n})', 'const cookies = {\'chocolate chip\'& \'peanut butter\'}\ncookies.for (cookie => {\n console.log("That\'s a tasty {cookie} cookie!")\n})', 'const cookies = [\'chocolate chip\', \'peanut butter\']Æcookies.forEach(cookie => {Æ console.log(`That\'s a tasty ${cookie} cookie!`)Æ})')
	create_CodeBlock('JavaScript', 'Interpolation', 3, 'const conjunction = (firstWord, secondWord) => {\n return `${firstWord} ${secondWord}`\n}\nconsole.log(conjunction(\'Master\', \'Card\'))', '_____ conjunction = (firstWord, secondWord) __ {\n return ___firstWord} ${secondWord}`\n}\nconsole.___(___________(\'Master\', \'Card\'))', 'const conjunction = (\'firstWord\', \'secondWord\') : {\n return `\'firstWord\' \'secondWord\'`\n}\nxbox.console(conjunction(\'Master\', \'Card\'))', 'const conjunction = (firstWord, secondWord) => {Æ return `${firstWord} ${secondWord}`Æ}Æconsole.log(conjunction(\'Master\', \'Card\'))')
	create_CodeBlock('CSS', 'Nested CSS', 3, 'nav ul li {\n display: inline;\n padding: 2em;\n}', 'nav ul li _\n display: inline;\n padding: 2__;\n}', 'nav ul li (\n show: online;\n space-around: 2em;\n)', 'nav ul li {Æ display: inline;Æ padding: 2em;Æ}')
	create_CodeBlock('JavaScript', 'Creating Objects', 4, 'const steve = {\n name: \'Steve Brownlee\',\n job: \'Instructor\'\n}', '_____ steve _ {\n name_ _Steve Brownlee_,\n ___: \'Instructor\'\n_', 'create steve = [\n name: \'Steve Brownlee\',\n job: \'Rock Star\'\n]', 'const steve = {Æ name: \'Steve Brownlee\',Æ job: \'Instructor\'Æ}')
	create_CodeBlock('JavaScript', 'Object.create', 4, 'const person = Object.create({}, {\n name: {\n value: \'Kimmy Bird\',\n enumerable: true\n },\n job: {\n value: \'Instructor\',\n enumerable: true\n }\n})', 'const person = ______.______(__, {\n name: {\n _____: \'Kimmy Bird\',\n enumerable: ____\n },\n job: {\n value: _Instructor_,\n __________: true\n }\n})', 'create person = Object.spawn({\n name: {\n value: \'Kimmy Bird\',\n enumberable: true\n },\n job: {\n value: \'Code Wizard\',\n enumerable: false\n }\n})', 'const person = Object.create({}, {Æ name: {Æ value: \'Kimmy Bird\',Æ enumerable: trueÆ },Æ job: {Æ value: \'Instructor\',Æ enumerable: trueÆ }Æ})')
	create_CodeBlock('JavaScript', 'Array Maps', 4, 'const capPlanets = planets.map(planet => {\n return planet.charAt(0).toUpperCase() + planet.slice(1)\n})', 'const capPlanets = planets.___(planet __ {\n ______ planet.charAt(0).toUpperCase() + ______.slice(1)\n})', 'const capPlanets = planets.map((function) planet => {\n return planet.characterAt(0).toUpper() + planet.lice(1)\n})', 'const capPlanets = planets.map(planet => {Æ return planet.charAt(0).toUpperCase() + planet.slice(1)Æ})')
	create_CodeBlock('JavaScript', 'Array Filters', 4, 'const filteredPlanets = planets.filter(planet => {\n const containsE = planet.includes(\'e\')\n return containsE\n})', 'const filteredPlanets = planets.______(planet => {\n _____ containsE = planet.includes(\'_\')\n return _________\n})', 'const filteredPlanets = planets.addFilter(planet (function) {\n if containsE = planet.hasCharmander(\'e\')\n provide containsE\n})', 'const filteredPlanets = planets.filter(planet => {Æ const containsE = planet.includes(\'e\')Æ return containsEÆ})')
	create_CodeBlock('JavaScript', 'Array Reduce', 4, 'const words = [\'an\', \'early\', \'bird\']\nconst sentence = words.reduce(\n   (partial, next) => partial + \' \' + next\n)', 'const words = _\'an\', \'early\', \'bird\'_\nconst sentence = _____.reduce(\n   (partial, next) __ partial + \' \' + ____\n)', 'const words = [an, early, bird]\nconst sentence = words.induce(\n   (partial & next) = partial + \' \' + next\n)', 'const words = [\'an\', \'early\', \'bird\']Æconst sentence = words.reduce(Æ (partial, next) => partial + \' \' + nextÆ)')
	create_CodeBlock('CSS', 'Nested CSS', 5, '.top li {\n list-style: none;\n display: inline;\n}', '.top li {\n list-_____: none;\n _______: inline;\n}', '.top li {\n list-style: noBullet;\n display: true;\n}', '.top li {Æ list-style: none;Æ display: inline;Æ}')
	create_CodeBlock('CSS', 'CSS Pseudo Selectors', 5, '.n-child section:nth-of-type(even){\n border: 1px solid green;\n}', '.n-child section:___-of-type(even){\n border: ___ solid green;\n}', '.n-child section:4th-oft-hype(steven){\n border: solid green 1px;\n}', '.n-child section:nth-of-type(even){Æ border: 1px solid green;Æ}')
	create_CodeBlock('CSS', 'CSS Pseudo Selectors', 5, '.top li:not(:last-child)::after {\n content: \',\';\n}', '.top li:___(:____-child)__after {\n content: \',\';\n}', '.top li:not(:last-parent)::while {\n content: \';\n}', '.top li:not(:last-child)::after {Æ content: \',\';Æ}')
	create_CodeBlock('JavaScript', 'Objects of Objects', 5, 'const customers = {\n "location": {\n "city": "Crystal"\n },\n "last_name": "Weimann",\n "job": {\n "position": "Future Web Representative"\n },\n "first_name": "Brittany",\n "contacts": {\n "mobile": "1-327-084-4643",\n "email": [\n "recusandae23@outlook.com"\n ]\n }\n}', '_____ customers = {\n "location": {\n _city_: "Crystal"\n },\n "last_name": "Weimann",\n "job": _\n "position": "Future Web Representative"\n },\n "first_name": "Brittany",\n "contacts": {\n _mobile__ "1-327-084-4643",\n "email": _\n "recusandae23@outlook.com"\n _\n }\n}', 'const customers => {\n "location": {\n "city"= "Crystal"\n },\n "last_name"= "Weimann",\n "job": {\n position: Future Web Representative\n },\n "first_name": "Brittany",\n "contacts"={}, {\n "mobile": "1-327-084-4643",\n "email": [\n "recusandae23@outlook.com"\n ]\n }\n]', 'const customers = {Æ "location": {Æ "city": "Crystal"Æ },Æ "last_name": "Weimann",Æ "job": {Æ "position": "Future Web Representative"Æ },Æ "first_name": "Brittany",Æ "contacts": {Æ "mobile": "1-327-084-4643",Æ "email": [Æ "recusandae23@outlook.com"Æ ]Æ }Æ}')
	create_CodeBlock('JavaScript', 'Arrays of Arrays', 5, 'const numbers = [\n 1234,\n [\'one\', \'two\', \'three\', \'four\'],\n \'five hundred\',\n [5, 0, 0]\n]', 'const numbers _ _\n 1234,\n _\'one\', \'two\', \'three\', \'four\'_,\n \'five hundred\',\n _5, 0, 0_\n_', 'const numbers = [\n 1234\n [\'one\' \'two\' \'three\' \'four\']\n \'five hundred\'\n [5 0 0]\n]', 'const numbers = [Æ 1234,Æ [\'one\', \'two\', \'three\', \'four\'],Æ \'five hundred\',Æ [5, 0, 0]Æ]')
	create_CodeBlock('JSON', 'JSON Database', 6, '{\n "customers": [\n {\n "id": 1,\n "name": "Alice",\n "email": "alice@gmail.com"\n },\n {\n "id": 2,\n "name": "Bill",\n "email": "bill@gmail.com"\n }\n ],\n "balances": [\n {\n "id": 1,\n "customerId": 1,\n "accountBalance": 785.43\n },\n {\n "id": 2,\n "customerId": 2,\n "accountBalance": 23.81\n }\n ]\n}', '{\n "customers": [\n {\n "__": 1,\n "name"_ "Alice",\n "_____": "alice@gmail.com"\n _,\n {\n "id": 2,\n "____": "Bill",\n "email": "bill@gmail.com"\n }\n ],\n "balances": _\n {\n "__": 1,\n "__________": 1,\n "accountBalance": 785.43\n _,\n {\n "id": 2,\n "customerId": _,\n "_______Balance": 23.81\n }\n ]\n}', '[\n customers: {\n [\n id: 1,\n name: "Alice",\n email: "alice@gmail.com"\n ],\n {\n id: 2,\n name: "Bill",\n email: "bill@gmail.com"\n }\n ],\n balances: [\n {\n id: 1,\n customerId: 1,\n accountBalance: 785.43\n },\n {\n id: 2,\n customerId: 2,\n accountBalance: 23.81\n }\n }\n]', '{Æ "customers": [Æ {Æ "id": 1,Æ "name": "Alice",Æ "email": "alice@gmail.com"Æ },Æ {Æ "id": 2,Æ "name": "Bill",Æ "email": "bill@gmail.com"Æ }Æ ],Æ "balances": [Æ {Æ "id": 1,Æ "customerId": 1,Æ "accountBalance": 785.43Æ },Æ {Æ "id": 2,Æ "customerId": 2,Æ "accountBalance": 23.81Æ }Æ ]Æ}')
	create_CodeBlock('JavaScript', 'Load from Session Storage', 6, 'const dbLoad = () => {\n const myData = sessionStorage.getItem(\'MyKey\')\n return JSON.parse(myData)\n}', '_____ dbLoad = _____ {\n const myData = sessionStorage._______(\'MyKey\')\n return ____.parse(myData)\n}', 'const dbLoad = (function) : {\n const myData = sessionStorage.fetch(\'MyKey\')\n return JSON.sparse(myData)\n}', 'const dbLoad = () => {Æ const myData = sessionStorage.getItem(\'MyKey\')Æ return JSON.parse(myData)Æ}')
	create_CodeBlock('JavaScript', 'Load from Local Storage', 6, 'const dbLoad = () => {\n const myData = localStorage.getItem(\'MyKey\')\n return JSON.parse(myData)\n}', '_____ dbLoad = _____ {\n const myData = localStorage._______(\'MyKey\')\n return ____.parse(myData)\n}', 'const dbLoad = (function) : {\n const myData = localStorage.fetch(\'MyKey\')\n return JSON.sparse(myData)\n}', 'const dbLoad = () => {Æ const myData = localStorage.getItem(\'MyKey\')Æ return JSON.parse(myData)Æ}')
	create_CodeBlock('JavaScript', 'Save to Session Storage', 6, 'const dbSave = (database) => {\n sessionStorage.setItem(\'MyKey\', JSON.stringify(database))\n}', 'const dbSave = (database) => {\n sessionStorage._____(\'MyKey\', JSON._________(database))\n}', 'const dbSave = {database} => {\n sessionStorage.setItem(\'MyKey\', JQUERY.spaghettify(database))\n}', 'const dbSave = (database) => {Æ sessionStorage.setItem(\'MyKey\', JSON.stringify(database))Æ}')
	create_CodeBlock('JavaScript', 'Save to Local Storage', 6, 'const dbSave = (database) => {\n localStorage.setItem(\'MyKey\', JSON.stringify(database))\n}', 'const dbSave = (database) => {\n localStorage._____(\'MyKey\', JSON._________(database))\n}', 'const dbSave = {database} => {\n localStorage.setItem(\'MyKey\', JQUERY.spaghettify(database))\n}', 'const dbSave = (database) => {Æ localStorage.setItem(\'MyKey\', JSON.stringify(database))Æ}')
	create_CodeBlock('JavaScript', 'Event Listeners in JavaScript', 7, 'document.querySelector(\'#news\').addEventListener(\'click\', function () {\n toggleClass(document.querySelector(\'#newsAlert\'), \'disabled\', \'enabled\')\n})', 'document.query________(\'#news\').___EventListener(\'click\', ________ () {\n toggleClass(document.querySelector(\'#newsAlert\'), \'disabled\', \'enabled\')\n})', 'document.selectSection(\'#news\').addSlistener(\'click\', => () {\n toggleClass(document.find(\'#newsAlert\'), \'disabled\', \'enabled\')\n})', 'document.querySelector(\'#news\').addEventListener(\'click\', function () {Æ toggleClass(document.querySelector(\'#newsAlert\'), \'disabled\', \'enabled\')Æ})')
	create_CodeBlock('jQuery', 'Event Listeners in jQuery', 7, '$(\'#form-button\').click(function() {\n console.log($(\'#input-name\').val())\n})', '$(\'#form-button\')._____(function__ {\n console.log($(\'#input-name\').val___\n})', '$(\'#form-button\').slick(unction() [\n console.log(!(\'#input-name\').val())\n])', '$(\'#form-button\').click(function() {Æ console.log($(\'#input-name\').val())Æ})')
	create_CodeBlock('jQuery', 'Event Listeners in jQuery', 7, '$(\'.main-article\').mouseover(function(){\n console.log(\'The mouse is moving!\')\n})', '$(\'.main-article\')._____over(________(){\n console.log(\'The mouse is moving!\')\n})', '$(\'.main-article\').onMouseOver(=>(){\n console.vlog(\'The mouse is being still!\')\n})', '$(\'.main-article\').mouseover(function(){Æ console.log(\'The mouse is moving!\')Æ})')
	create_CodeBlock('jQuery', 'Fade Effects', 8, '$(\'#button\').click(function(){\n $(\'#myImage\').fadeOut(1000)\n $(\'#myImage\').fadeIn(\'slow\')\n})', '$(\'#button\')._____(function(){\n ____myImage\').fadeOut(1000)\n $(\'#myImage\').fade__(\'slow\')\n})', '!(\'#button\').flick(handler(){\n !(\'#myImage\').fadeOut(1000)\n !(\'#myImage\').shimmy(\'slow\')\n})', '$(\'#button\').click(function(){Æ $(\'#myImage\').fadeOut(1000)Æ $(\'#myImage\').fadeIn(\'slow\')Æ})')
	create_CodeBlock('jQuery', 'Animations', 8, '$(\'#button\').click(function(){\n $(\'#myImage\').animate(\n {\n opacity: 0.5,\n width: \'100%\'\n }\n )\n })', '$(\'#button\').click(function(){\n ____myImage\')._______(\n {\n opacity: 0.5,\n width: \'100%\'\n _\n )\n })', '$(\'#button\').activate(animate(){\n $(\'#myImage\').moveLeft(\n {\n opacity: 0.5,\n width: \'100%\'\n }\n )\n })', '$(\'#button\').click(function(){Æ $(\'#myImage\').animate(Æ {Æ opacity: 0.5,Æ width: \'100%\'Æ }Æ )Æ })')
	create_CodeBlock('jQuery', 'AJAX Get', 9, '$(\'#loadSongs\').click(function(){\n $.ajax({ url: \'data.json\', method: "GET"})\n .then(response => {\n //do something\n })\n})', '____loadSongs\').click(function(){\n $.____({ url: \'data.json\', method: "___"})\n .then(response => {\n //do something\n })\n})', 'const loader = () => {$(\'#loadSongs\').click(function(){\n $.ajax({ url: \'data.json\', method: "FETCH"})\n .then(response => {\n //do something\n })\n})', '$(\'#loadSongs\').click(function(){Æ $.ajax({ url: \'data.json\', method: "GET"})Æ .then(response => {Æ //do somethingÆ })Æ})')
	create_CodeBlock('Command Line', 'Starting JSON-Server', 9, 'json-server -p 5001 -w db.json', 'json-______ -p 5001 -w db.____', '$(jquery)json-server --fetch all 5001 -w db.json', 'json-server -p 5001 -w db.json')
	create_CodeBlock('JavaScript', 'Promise.all', 9, 'let promises = []\npromises.push(\n //something from the API\n)\nPromise.all(promises).then(result => {\n //do something else\n})', 'let promises = __\npromises.push(\n //something from the API\n)\nPromise.___(promises).____(result => {\n //do something else\n})', 'let promises = {}\npromises.push(\n //something from the API\n)\nPromise.swear(promises).then(result = {\n //do something else\n})', 'let promises = []Æpromises.push(Æ //something from the APIÆ)ÆPromise.all(promises).then(result => {Æ //do something elseÆ})')
	create_CodeBlock('JavaScript', 'React Import Statement', 10, 'import React, { Component } from "react"', 'import React, { _________ } from "_____"', 'return React, { Module } from "react"', 'import React, { Component } from "react"')
	create_CodeBlock('JavaScript', 'React Export Statement', 10, 'export default class MyClass extends Component {}', 'export _______ class MyClass extends _________ {}', 'import class MyClass extends React {}', 'export default class MyClass extends Component {}')
	create_CodeBlock('JavaScript', 'React Render Function', 10, 'render() {\n return (\n <div>\n <h1>Title</h1>\n </div>\n )\n}', 'render() {\n ______ (\n <div>\n <h1>Title</h1>\n </div>\n )\n}', 'return() {\n const element = (\n <div>\n <h1>Title</h1>\n </div><p>Hey!</p>\n )\n}', 'render() {Æ return (Æ <div>Æ <h1>Title</h1>Æ </div>Æ )Æ}')
	create_CodeBlock('JavaScript', 'Props in React', 10, 'this.props.myArray.map(element => <MyComponent key={element.id} />)', 'this._____.myArray.map(element => <MyComponent ___={element.id} __)', 'props.myArray.filter(element (function) => <MyComponent id={element.id} />)', 'this.props.myArray.map(element => <MyComponent key={element.id} />)')
	create_CodeBlock('JavaScript', 'React State', 10, 'state = {\n userName: \'\',\n userId: \'\'\n}', 'state = _\n userName: \'\',\n userId_ \'\'\n}', 'stuff = [\n userName: (\'\'),\n userId: \'\'\n]', 'state = {Æ userName: \'\',Æ userId: \'\'Æ}')

}

module.exports = initializeCodeBlocks